{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set fire_component = fire_component ? fire_component : '' %}
{% set classes = classes ? classes : [] %}

{%
  set classes = classes|merge([
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ])
%}

{% set section_classes = '' %}
{% set advanced_settings = content.field_advanced_settings['#items'].0.entity %}
{% set section_id = advanced_settings.field_section_id.0.value|replace(' ', '-')|lower %}

{% set top_margin_desktop = advanced_settings.field_top_margin_desktop.0.value %}
{% set bottom_margin_desktop = advanced_settings.field_bottom_margin_desktop.0.value %}
{% set top_margin_tablet = advanced_settings.field_top_margin_tablet.0.value %}
{% set bottom_margin_tablet = advanced_settings.field_bottom_margin_tablet.0.value %}
{% set top_margin_mobile = advanced_settings.field_top_margin_mobile.0.value %}
{% set bottom_margin_mobile = advanced_settings.field_bottom_margin_mobile.0.value %}

{% if top_margin_desktop %}
  {% set section_classes = section_classes ~ ' ' ~ top_margin_desktop %}
{% endif %}
{% if top_margin_tablet %}
  {% set section_classes = section_classes ~ ' ' ~ top_margin_tablet %}
{% endif %}
{% if top_margin_mobile %}
  {% set section_classes = section_classes ~ ' ' ~ top_margin_mobile %}
{% endif %}
{% if bottom_margin_desktop %}
  {% set section_classes = section_classes ~ ' ' ~ bottom_margin_desktop %}
{% endif %}
{% if bottom_margin_tablet %}
  {% set section_classes = section_classes ~ ' ' ~ bottom_margin_tablet %}
{% endif %}
{% if bottom_margin_mobile %}
  {% set section_classes = section_classes ~ ' ' ~ bottom_margin_mobile %}
{% endif %}

{% set section_classes = section_classes|trim %}

{% block paragraph %}
  <section
    {% if section_id %}id="{{ section_id }}"{% endif %}
    {% if section_classes %}class="{{ section_classes }}"{% endif %}
  >
    <div{{ attributes.setAttribute('class', '').addClass(classes).setAttribute('data-fire-component', fire_component) }}>
      {% block content %}
        {{ content }}
      {% endblock %}
    </div>
  </section>
{% endblock paragraph %}
